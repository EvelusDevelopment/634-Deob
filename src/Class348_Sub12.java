/* Class348_Sub12 - Decompiled by JODE
 * Visit http://jode.sourceforge.net/
 */

final class Class348_Sub12 extends Node
{
    static int anInt6734;
    int anInt6735;
    static short[][][] aShortArrayArrayArray6736;
    int anInt6737;
    int anInt6738 = -2147483648;
    static int anInt6739;
    static int[][] anIntArrayArray6740;
    private static short[][] aShortArrayArray6741
	= { { 6798, 107, 10283, 16, 4797, 7744, 5799, 4634, -31839, 22433,
	      2983, -11343, 8, 5281, 10438, 3650, -27322, -21845, 200, 571,
	      908, 21830, 28946, -15701, -14010 },
	    { 8741, 12, -1506, -22374, 7735, 8404, 1701, -27106, 24094, 10153,
	      -8915, 4783, 1341, 16578, -30533, 25239, 8, 5281, 10438, 3650,
	      -27322, -21845, 200, 571, 908, 21830, 28946, -15701, -14010,
	      7085, 4001, 317, 918, 9517, 9125, 3608, 16450, -32593, 22026,
	      2700, -22256, 10289, 3877, -27999, 10770, 8982, 3753, 10275, 924,
	      8637, -26428, 26785, -15202, 8736, 2994, -25710, 928, 6859,
	      -25016, -5449, -14823, -23401, 12, -22456, -27471, -11229, 21673,
	      57, -24046, -27190, -22877, -30041, 20013, 21596, -31414, 29000,
	      -11209, 6361, -25552, -25450, -14174, -10998, -27357, 3249, 7465,
	      8913, 13774, 4584, 11728, 10454, 8123, 2619, 13756, -28220,
	      -26323, -23901, -31385, -32342, -29806, -29902, -24128, 933,
	      1189, 3873, 6057, 8590, 1812, 4895, -5366, 15019, 20793, 7599,
	      9536, 21778, 14102, 6938, 14648, 5919, 6472, 10128, 17940, 3226,
	      267, 5421, -27570, -25177, -26319, -28217, -28132, -23792,
	      -23249, -23001, -19033, 5427, 6340, 5673, 2458, 3625, 8646, 5186,
	      10382, 6826, 7442, 158, 2454, 9655, -27496, -27578, -31687,
	      11146, 18712, 10785, 21902, 10566, 9500, 11819, 11144, -15965,
	      -24170, -32488, -29277, 29097, -9567, -18794, -27116, 921, 6028,
	      2974, -5230, 6550, 15244, 14, 49, 3994, 2332, 6038, -31701, 520,
	      41, 9402, -4825, 28978, -25278, 30876, 13475, -28395, -24010,
	      -14027, -22454, -18158, 20503, -27618, -22258, -1776, -31468,
	      9616, 7333, 650, 784, 796, 813, -616, -3194, -8152, 1686, 29074,
	      22422, -32245, 29084, 22411, -22000, 3982, 7062, 10382, 3230,
	      8076, 20, 1936, 10, -22473, 4892, 5805, 5904, 10, 48, 1936, 5640,
	      8472, -25529 },
	    { 25238, 8742, 12, -1506, -22374, 7735, 8404, 1701, -27106, 24094,
	      10153, -8915, 4783, 1341, 16578, -30533, 8, 5281, 10438, 3650,
	      -27322, -21845, 200, 571, 908, 21830, 28946, -15701, -14010,
	      7085, 4001, 317, 918, 9517, 9125, 3608, 16450, -32593, 22026,
	      2700, -22256, 10289, 3877, -27999, 10770, 8982, 3753, 10275, 924,
	      8637, -26428, 26785, -15202, 8736, 2994, -25710, 928, 6859,
	      -25016, -5449, -14823, -23401, 12, -22456, -27471, -11229, 21673,
	      57, -24046, -27190, -22877, -30041, 20013, 21596, -31414, 29000,
	      -11209, 6361, -25552, -25450, -14174, -10998, -27357, 3249, 7465,
	      8913, 13774, 4584, 11728, 10454, 8123, 2619, 13756, -28220,
	      -26323, -23901, -31385, -32342, -29806, -29902, -24128, 933,
	      1189, 3873, 6057, 8590, 1812, 4895, -5366, 15019, 20793, 7599,
	      9536, 21778, 14102, 6938, 14648, 5919, 6472, 10128, 17940, 3226,
	      267, 5421, -27570, -25177, -26319, -28217, -28132, -23792,
	      -23249, -23001, -19033, 5427, 6340, 5673, 2458, 3625, 8646, 5186,
	      10382, 6826, 7442, 158, 2454, 9655, -27496, -27578, -31687,
	      11146, 18712, 10785, 21902, 10566, 9500, 11819, 11144, -15965,
	      -24170, -32488, -29277, 29097, -9567, -18794, -27116, 921, 6028,
	      2974, -5230, 6550, 15244, 14, 49, 3994, 2332, 6038, -31701, 520,
	      41, 9402, -4825, 28978, -25278, 30876, 13475, -28395, -24010,
	      -14027, -22454, -18158, 20503, -27618, -22258, -1776, -31468,
	      9616, 7333, 650, 784, 796, 813, -616, -3194, -8152, 1686, 29074,
	      22422, -32245, 29084, 22411, -22000, 3982, 7062, 10382, 3230,
	      8076, 20, 1936, 10, -22473, 4892, 5805, 5904, 10, 48, 1936, 5640,
	      8472, -25529 },
	    { 4626, 11146, 6439, 12, 4758, 10270, 7085, 4001, 317, 918, 9517,
	      9125, 3608, 16450, -32593, 22026, 2700, -22256, 10289, 3877,
	      -27999, 10770, 8982, 3753, 10275, 924, 8637, -26428, 26785,
	      -15202, 8736, 2994, -25710, 928, 6859, -25016, -5449, -14823,
	      -23401, 12, -22456, -27471, -11229, 21673, 57, -24046, -27190,
	      -22877, -30041, 20013, 21596, -31414, 29000, -11209, 6361,
	      -25552, -25450, -14174, -10998, -27357, 3249, 7465, 8913, 13774,
	      4584, 11728, 10454, 8123, 2619, 13756, -28220, -26323, -23901,
	      -31385, -32342, -29806, -29902, -24128, 933, 1189, 3873, 6057,
	      8590, 1812, 4895, -5366, 15019, 20793, 7599, 9536, 21778, 14102,
	      6938, 14648, 5919, 6472, 10128, 17940, 3226, 267, 5421, -27570,
	      -25177, -26319, -28217, -28132, -23792, -23249, -23001, -19033,
	      5427, 6340, 5673, 2458, 3625, 8646, 5186, 10382, 6826, 7442, 158,
	      2454, 9655, -27496, -27578, -31687, 11146, 18712, 10785, 21902,
	      10566, 9500, 11819, 11144, -15965, -24170, -32488, -29277, 29097,
	      -9567, -18794, -27116, 921, 6028, 2974, -5230, 6550, 15244, 14,
	      49, 3994, 2332, 6038, -31701, 520, 41, 9402, -4825, 28978,
	      -25278, 30876, 13475, -28395, -24010, -14027, -22454, -18158,
	      20503, -27618, -22258, -1776, -31468, 9616, 7333, 650, 784, 796,
	      813, -616, -3194, -8152, 1686, 29074, 22422, -32245, 29084,
	      22411, -22000, 3982, 7062, 10382, 3230, 8076, 20, 1936, 10,
	      -22473, 4892, 5805, 5904, 10, 48, 1936, 5640, 8472, -25529 },
	    { 4550, 4537, 5681, 5673, 5790, 6806, 8076, 4574, 4444, 4328, 7052,
	      4490 } };
    static RasterToolkit[] aClass105Array6742;
    static Class273 aClass273_6743;
    private static short[][] aShortArrayArray6744;
    int anInt6745;
    int anInt6746;
    int anInt6747;
    static volatile long aLong6748;
    private static short[][] aShortArrayArray6749;
    int anInt6750;
    Class348_Sub21 aClass348_Sub21_6751;
    static float aFloat6752;
    int anInt6753;
    
    public static void method2798(int i) {
	aShortArrayArray6741 = null;
	aClass105Array6742 = null;
	aShortArrayArray6744 = null;
	aShortArrayArray6749 = null;
	int i_0_ = -33 % ((-16 - i) / 53);
	aClass273_6743 = null;
	aShortArrayArrayArray6736 = null;
	anIntArrayArray6740 = null;
    }
    
    final boolean method2799(int i, int i_1_, int i_2_) {
	anInt6739++;
	if ((((Class348_Sub12) this).anInt6747 ^ 0xffffffff) >= (i_1_
								 ^ 0xffffffff)
	    && ((Class348_Sub12) this).anInt6750 >= i_1_
	    && i >= ((Class348_Sub12) this).anInt6746
	    && ((((Class348_Sub12) this).anInt6735 ^ 0xffffffff)
		<= (i ^ 0xffffffff)))
	    return true;
	if (((Class348_Sub12) this).anInt6745 <= i_1_
	    && ((Class348_Sub12) this).anInt6737 >= i_1_
	    && ((Class348_Sub12) this).anInt6753 <= i
	    && ((Class348_Sub12) this).anInt6738 >= i)
	    return true;
	if (i_2_ < 60)
	    method2799(8, 24, -128);
	return false;
    }
    
    static final void method2800(int i, int i_3_, int i_4_, int i_5_, int i_6_,
				 int i_7_, int i_8_, int i_9_, byte i_10_,
				 int i_11_) {
	anInt6734++;
	if (i_10_ >= 118) {
	    Class348_Sub27 class348_sub27 = null;
	    for (Class348_Sub27 class348_sub27_12_
		     = ((Class348_Sub27)
			Class348_Sub42_Sub20.aClass262_9711.getFirst(4));
		 class348_sub27_12_ != null;
		 class348_sub27_12_
		     = (Class348_Sub27) Class348_Sub42_Sub20.aClass262_9711
					    .nextForward((byte) 50)) {
		if (((i ^ 0xffffffff)
		     == (((Class348_Sub27) class348_sub27_12_).anInt6899
			 ^ 0xffffffff))
		    && (((Class348_Sub27) class348_sub27_12_).anInt6905
			^ 0xffffffff) == (i_11_ ^ 0xffffffff)
		    && i_4_ == ((Class348_Sub27) class348_sub27_12_).anInt6896
		    && (((Class348_Sub27) class348_sub27_12_).anInt6904
			== i_7_)) {
		    class348_sub27 = class348_sub27_12_;
		    break;
		}
	    }
	    if (class348_sub27 == null) {
		class348_sub27 = new Class348_Sub27();
		((Class348_Sub27) class348_sub27).anInt6899 = i;
		((Class348_Sub27) class348_sub27).anInt6904 = i_7_;
		((Class348_Sub27) class348_sub27).anInt6896 = i_4_;
		((Class348_Sub27) class348_sub27).anInt6905 = i_11_;
		if (i_11_ >= 0 && i_4_ >= 0 && Class367_Sub4.anInt7319 > i_11_
		    && (i_4_ ^ 0xffffffff) > (Class348_Sub40_Sub3.anInt9109
					      ^ 0xffffffff))
		    Class184.method1387(-69, class348_sub27);
		Class348_Sub42_Sub20.aClass262_9711.addToFront(class348_sub27,
							       -20180);
	    }
	    ((Class348_Sub27) class348_sub27).anInt6893 = i_5_;
	    ((Class348_Sub27) class348_sub27).anInt6900 = i_8_;
	    ((Class348_Sub27) class348_sub27).anInt6895 = i_6_;
	    ((Class348_Sub27) class348_sub27).anInt6894 = i_3_;
	    ((Class348_Sub27) class348_sub27).anInt6907 = i_9_;
	}
    }
    
    Class348_Sub12(Class348_Sub21 class348_sub21) {
	((Class348_Sub12) this).anInt6735 = -2147483648;
	((Class348_Sub12) this).anInt6750 = -2147483648;
	((Class348_Sub12) this).anInt6745 = 2147483647;
	((Class348_Sub12) this).anInt6746 = 2147483647;
	((Class348_Sub12) this).anInt6737 = -2147483648;
	((Class348_Sub12) this).anInt6747 = 2147483647;
	((Class348_Sub12) this).anInt6753 = 2147483647;
	((Class348_Sub12) this).aClass348_Sub21_6751 = class348_sub21;
    }
    
    static {
	anIntArrayArray6740
	    = new int[][] { { 6, 6 }, { 6, 6 }, { 6, 5, 5 }, { 5, 6, 5 },
			    { 5, 5, 6 }, { 6, 5, 5 }, { 5, 0, 4, 1 },
			    { 7, 7, 1, 2 }, { 7, 1, 2, 7 },
			    { 8, 9, 4, 0, 8, 9 }, { 0, 8, 9, 8, 9, 4 },
			    { 11, 0, 10, 11, 4, 2 }, { 6, 6 }, { 7, 7, 1, 2 },
			    { 7, 7, 1, 2 } };
	aShortArrayArray6749
	    = new short[][] { new short[0], new short[0], new short[0],
			      new short[0], new short[0] };
	aShortArrayArray6744
	    = (new short[][]
	       { { 6554, 115, 10304, 28, 5702, 7756, 5681, 4510, -31835, 22437,
		   2859, -11339, 16, 5157, 10446, 3658, -27314, -21965, 472,
		   580, 784, 21966, 28950, -15697, -14002 },
		 { 9104, 10275, 7595, 3610, 7975, 8526, 918, -26734, 24466,
		   10145, -6882, 5027, 1457, 16565, -30545, 25486, 24, 5392,
		   10429, 3673, -27335, -21957, 192, 687, 412, 21821, 28835,
		   -15460, -14019, 7072, 3990, 309, 910, 9509, 9117, 3600,
		   16442, -32601, 22020, 2694, -22264, 10281, 3869, -28007,
		   10764, 8974, 3745, 10269, 914, 8629, -26438, 26779, -15208,
		   8728, 2982, -25718, 918, 6842, -25030, -5462, -14833,
		   -22386, 8, -22468, -27479, -11237, 21664, 45, -24054,
		   -27207, -22887, -30051, 20003, 21584, -31426, 28990, -11219,
		   6353, -25560, -25458, -14182, -11006, -27365, 3241, 7457,
		   8899, 13760, 4565, 11711, 10436, 8103, 2604, 13740, -28232,
		   -26333, -23910, -31403, -32352, -29812, -29909, -24137, 925,
		   1181, 3865, 6049, 8582, 1804, 4887, -5372, 15011, 20785,
		   7591, 9528, 21770, 14094, 6930, 14635, 5911, 6463, 10124,
		   17935, 3218, 262, 5413, -27579, -25189, -26331, -28236,
		   -28144, -23804, -23261, -23013, -19045, 5419, 6332, 5665,
		   2450, 3617, 8638, 5178, 10374, 6819, 7434, 150, 2446, 9647,
		   -27504, -27586, -31695, 11142, 18704, 10775, 21898, 10554,
		   9492, 11811, 11140, -15978, -24180, -32498, -29288, 29084,
		   -9579, -18799, -27122, 913, 6024, 2966, -5238, 6542, 15240,
		   10, 39, 3986, 2324, 6030, -31709, 512, 33, 9394, -4833,
		   28967, -25290, 30866, 13466, -28403, -24022, -14042, -22472,
		   -18166, 20493, -27626, -22266, -1784, -31473, 9612, 7324,
		   646, 778, 786, 800, -624, -3198, -8164, 1678, 29068, 22412,
		   -32253, 29075, 22404, -22006, 3974, 7054, 10376, 3222, 8070,
		   12, 1930, 2, -22481, 4884, 5797, 5900, 6, 40, 1932, 5638,
		   8466, -25537 },
		 { 25485, 9105, 10275, 7595, 3610, 7975, 8526, 918, -26734,
		   24466, 10145, -6882, 5027, 1457, 16565, -30545, 24, 5392,
		   10429, 3673, -27335, -21957, 192, 687, 412, 21821, 28835,
		   -15460, -14019, 7072, 3990, 309, 910, 9509, 9117, 3600,
		   16442, -32601, 22020, 2694, -22264, 10281, 3869, -28007,
		   10764, 8974, 3745, 10269, 914, 8629, -26438, 26779, -15208,
		   8728, 2982, -25718, 918, 6842, -25030, -5462, -14833,
		   -22386, 8, -22468, -27479, -11237, 21664, 45, -24054,
		   -27207, -22887, -30051, 20003, 21584, -31426, 28990, -11219,
		   6353, -25560, -25458, -14182, -11006, -27365, 3241, 7457,
		   8899, 13760, 4565, 11711, 10436, 8103, 2604, 13740, -28232,
		   -26333, -23910, -31403, -32352, -29812, -29909, -24137, 925,
		   1181, 3865, 6049, 8582, 1804, 4887, -5372, 15011, 20785,
		   7591, 9528, 21770, 14094, 6930, 14635, 5911, 6463, 10124,
		   17935, 3218, 262, 5413, -27579, -25189, -26331, -28236,
		   -28144, -23804, -23261, -23013, -19045, 5419, 6332, 5665,
		   2450, 3617, 8638, 5178, 10374, 6819, 7434, 150, 2446, 9647,
		   -27504, -27586, -31695, 11142, 18704, 10775, 21898, 10554,
		   9492, 11811, 11140, -15978, -24180, -32498, -29288, 29084,
		   -9579, -18799, -27122, 913, 6024, 2966, -5238, 6542, 15240,
		   10, 39, 3986, 2324, 6030, -31709, 512, 33, 9394, -4833,
		   28967, -25290, 30866, 13466, -28403, -24022, -14042, -22472,
		   -18166, 20493, -27626, -22266, -1784, -31473, 9612, 7324,
		   646, 778, 786, 800, -624, -3198, -8164, 1678, 29068, 22412,
		   -32253, 29075, 22404, -22006, 3974, 7054, 10376, 3222, 8070,
		   12, 1930, 2, -22481, 4884, 5797, 5900, 6, 40, 1932, 5638,
		   8466, -25537 },
		 { 4620, 11140, 6433, 6, 4752, 10264, 7072, 3990, 309, 910,
		   9509, 9117, 3600, 16442, -32601, 22020, 2694, -22264, 10281,
		   3869, -28007, 10764, 8974, 3745, 10269, 914, 8629, -26438,
		   26779, -15208, 8728, 2982, -25718, 918, 6842, -25030, -5462,
		   -14833, -22386, 8, -22468, -27479, -11237, 21664, 45,
		   -24054, -27207, -22887, -30051, 20003, 21584, -31426, 28990,
		   -11219, 6353, -25560, -25458, -14182, -11006, -27365, 3241,
		   7457, 8899, 13760, 4565, 11711, 10436, 8103, 2604, 13740,
		   -28232, -26333, -23910, -31403, -32352, -29812, -29909,
		   -24137, 925, 1181, 3865, 6049, 8582, 1804, 4887, -5372,
		   15011, 20785, 7591, 9528, 21770, 14094, 6930, 14635, 5911,
		   6463, 10124, 17935, 3218, 262, 5413, -27579, -25189, -26331,
		   -28236, -28144, -23804, -23261, -23013, -19045, 5419, 6332,
		   5665, 2450, 3617, 8638, 5178, 10374, 6819, 7434, 150, 2446,
		   9647, -27504, -27586, -31695, 11142, 18704, 10775, 21898,
		   10554, 9492, 11811, 11140, -15978, -24180, -32498, -29288,
		   29084, -9579, -18799, -27122, 913, 6024, 2966, -5238, 6542,
		   15240, 10, 39, 3986, 2324, 6030, -31709, 512, 33, 9394,
		   -4833, 28967, -25290, 30866, 13466, -28403, -24022, -14042,
		   -22472, -18166, 20493, -27626, -22266, -1784, -31473, 9612,
		   7324, 646, 778, 786, 800, -624, -3198, -8164, 1678, 29068,
		   22412, -32253, 29075, 22404, -22006, 3974, 7054, 10376,
		   3222, 8070, 12, 1930, 2, -22481, 4884, 5797, 5900, 6, 40,
		   1932, 5638, 8466, -25537 },
		 { 4540, 4529, 5674, 5667, 5785, 6802, 8072, 4562, 4437, 4317,
		   5896, 4488 } });
	aLong6748 = 0L;
	aShortArrayArrayArray6736
	    = new short[][][] { aShortArrayArray6741, aShortArrayArray6744,
				aShortArrayArray6749 };
	aClass273_6743 = new Class273("", 13);
    }
}
